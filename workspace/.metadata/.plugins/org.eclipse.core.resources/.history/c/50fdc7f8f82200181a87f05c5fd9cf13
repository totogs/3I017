
package services;



import org.json.JSONObject;
import services.ErrorJSON;
import tools.FriendTools;
import tools.UserTools;

public class FriendServices {

	public static JSONObject addFriend(String key, int idFriend){
		
		int idUser = UserTools.getId(key);
		
		if(FriendTools.friendExists(idUser, idFriend)){
			return ErrorJSON.serviceRefused("User "+idUser+" and "+idFriend+" are already friends !",3);
		}
		
		if(!FriendTools.insertFriend(idUser, idFriend)) {
			return ErrorJSON.serviceRefused("Data Base error", 4);
		}
		
		return ErrorJSON.serviceAccepted("Friend "+idFriend+" added !",key);
	}
	
	
	
	public static JSONObject removeFriend(String key, int idFriend){
		
		int idUser = UserTools.getId(key);
		
		if(!FriendTools.removeFriend(idUser, idFriend)) {
			return ErrorJSON.serviceRefused("Data Base error", 4);
		}
		
		return ErrorJSON.serviceAccepted("Friend "+idFriend+" removed !",key);
	}
	
	
	public static JSONObject searchFriend(String key, String query){
		
		int idUser = UserTools.getId(key);
		
		if(!FriendTools.searchFriend(idUser, query)) {
			return ErrorJSON.serviceRefused("Data Base error", 4);
		}
		JSONObject friends = FriendTools.searchFriend(idUser, query);
		
		return ErrorJSON.serviceAccepted("Friends associated to "+query,key);
	}
	
	
	public static JSONObject showFriend(String key){
		
		int idUser = UserTools.getId(key);
		
		if(!FriendTools.showFriend(idUser)) {
			return ErrorJSON.serviceRefused("Data Base error", 4);
		}
		return ErrorJSON.serviceAccepted("Display all friends !",key);
	}
}